/*==============================================================================
 Copyright (c) 2012-2015 Qualcomm Connected Experiences, Inc.
 All Rights Reserved.
 ==============================================================================*/

precision mediump float;
varying vec2 texCoord;
uniform sampler2D texSamplerMask;
uniform sampler2D texSamplerVideo;
uniform vec2 viewportOrigin;
uniform vec2 viewportSize;
uniform vec2 textureRatio;

void main ()
{
    vec2 screenCoord;
    float normalized_coordinates[2];
    
    // Inverted since the texture is landscape
    normalized_coordinates[1] = ((gl_FragCoord.x-viewportOrigin.x)/viewportSize.x);
    normalized_coordinates[0] = ((gl_FragCoord.y-viewportOrigin.y)/viewportSize.y);
    
    // Reflect video texture
    screenCoord.x = (1.0 - normalized_coordinates[0]) * textureRatio.x;
    screenCoord.y = (1.0 - normalized_coordinates[1]) * textureRatio.y;
    vec3 videoColor = texture2D(texSamplerVideo, screenCoord.xy).rgb;
    float maskColor  = texture2D(texSamplerMask, texCoord.xy).x;
    gl_FragColor.rgba = vec4(videoColor.r, videoColor.g, videoColor.b, maskColor);
}
